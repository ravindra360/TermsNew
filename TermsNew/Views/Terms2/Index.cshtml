@model IEnumerable<TermsNew.Models.Terms2>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>


<p>
    @Html.ActionLink("Create New", "Create")

    

    @Html.ActionLink("Related", "BulkData", "TermsList")
</p>



<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.MOT_ID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Headword)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Definition)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Full_form)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Abbreviations)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Synonyms)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.MOT_ID)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Headword)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Definition)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Full_form)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Abbreviations)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Synonyms)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>
        </tr>
    }

</table>












@*<style>
    th {
        text-align: left;
    }

    td {
        padding: 5px;
    }
</style>
<div style="width:700px; padding:5px; background-color:white;">
    @using (Html.BeginForm("BulkData", "TermsList", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        if (ViewBag.Message != null)
        {
            <div style="border:solid 1px green">
                @ViewBag.Message
            </div>
        }

        <div><a href="#" id="addNew">Add New</a></div>
        <table id="dataTable" border="0" cellpadding="0" cellspacing="0">
            <tr>
                <th>Abbreviations</th>
                <th>Definition</th>
                <th></th>
            </tr>
            @if (Model != null && Model.Count > 0)
            {
                int j = 0;
                foreach (var i in Model)
                {
                    <tr style="border:1px solid black">
                        <td>@Html.TextBoxFor(a => a[j].Abbreviations)</td>
                        <td>@Html.TextBoxFor(a => a[j].Definition)</td>
                        <td>
                            @if (j > 0)
                            {
                                <a href="#" class="remove">Remove</a>
                            }

                        </td>
                    </tr>
                    j++;
                }
            }
        </table>
        <input type="submit" value="Save Bulk Data" />
    }
</div>
 Here I will add Jquery Code for validation / dynamically add new rows / Remove rows etc 
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    <script language="javascript">
        $(document).ready(function () {

            //1. Add new row
            $("#addNew").click(function (e) {
                e.preventDefault();
                var $tableBody = $("#dataTable");
                var $trLast = $tableBody.find("tr:last");
                var $trNew = $trLast.clone();

                var suffix = $trNew.find(':input:first').attr('name').match(/\d+/);
                $trNew.find("td:last").html('<a href="#" class="remove">Remove</a>');
                $.each($trNew.find(':input'), function (i, val) {
                    // Replaced Name
                    var oldN = $(this).attr('name');
                    var newN = oldN.replace('[' + suffix + ']', '[' + (parseInt(suffix) + 1) + ']');
                    $(this).attr('name', newN);
                    //Replaced value
                    var type = $(this).attr('type');
                    if (type.toLowerCase() == "text") {
                        $(this).attr('value', '');
                    }

                    // If you have another Type then replace with default value
                    $(this).removeClass("input-validation-error");

                });
                $trLast.after($trNew);

                // Re-assign Validation
                var form = $("form")
                    .removeData("validator")
                    .removeData("unobtrusiveValidation");
                $.validator.unobtrusive.parse(form);
            });

            // 2. Remove
            $('a.remove').live("click", function (e) {
                e.preventDefault();
                $(this).parent().parent().remove();
            });

        });
    </script>*@
    




